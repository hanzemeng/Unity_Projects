//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""PlayerAction"",
            ""id"": ""e8bf0e3b-ae9a-4313-9bdb-ccb490a284ef"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""1c1eb156-1505-46bd-bc4f-688397afb7e8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CastSpell"",
                    ""type"": ""Button"",
                    ""id"": ""849ba562-1b0a-4adf-a09b-11004d94da04"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectSpell"",
                    ""type"": ""Value"",
                    ""id"": ""5d97c6e7-048f-4818-b6cf-86581cbe730f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TransitionToLevel"",
                    ""type"": ""Button"",
                    ""id"": ""ba6d3bbf-84ad-481a-81c7-532734efe879"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""b111e2b5-b84b-44eb-b0a9-896b6a40f538"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0c376612-0f17-4346-a421-0450bb1addf7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ab7dfc25-4ac5-4151-bd14-ccfd88522023"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""593737c9-74c8-458e-9849-8d91df140371"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cdb79e17-399b-460d-9fa2-efac90bf9eec"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""29c33703-d984-4832-976b-f149cf715683"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7bf38a0a-f1cd-4ba0-82f0-8c0bb6ae555f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CastSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b15337b-0e33-4e77-91a4-1db7241eece5"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectSpell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""303fdb93-02ca-43b6-b2b2-b27f3b7d3a4d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TransitionToLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09c538f0-da54-4540-a0ef-79be044ec9a1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CameraAction"",
            ""id"": ""d8930e13-a65f-4492-afd0-f07ac73d1997"",
            ""actions"": [
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""0f860a2c-b47d-4cf8-a767-c571cc4ca63e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""7eff09f1-d4ea-49fb-9d5a-70b8b775386f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""Value"",
                    ""id"": ""8f7cd05b-1b76-4a17-a1ef-71fdb548c2be"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateMode"",
                    ""type"": ""Button"",
                    ""id"": ""711ec0e2-6a33-4dda-9bbc-9f6ef9950288"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9ef14393-8cd7-404e-8226-5e54390f0331"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0926426-72f5-4aad-b9aa-7e5266f09e16"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9e5b73c-6d88-442c-962a-240e4213596a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fd799f3-40ab-474b-bb3d-ba4b32a44dbd"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""787cc972-3282-4d5b-bd92-622d1424589f"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AllyAction"",
            ""id"": ""dc052d59-6af4-44a5-b6a2-2eb4bbe9b49f"",
            ""actions"": [
                {
                    ""name"": ""Default"",
                    ""type"": ""Button"",
                    ""id"": ""cd7dbf2e-7cc7-4267-81e9-7e682667ff0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Idle"",
                    ""type"": ""Button"",
                    ""id"": ""293a9cfb-9072-4a70-aeb0-bf895559619b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AllyControl"",
                    ""type"": ""Button"",
                    ""id"": ""6e2e8caa-2144-4dee-ad6c-89c65164e243"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveTo"",
                    ""type"": ""Button"",
                    ""id"": ""35421ac4-c2f4-4b7e-b59c-079cf132c61e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FollowTarget"",
                    ""type"": ""Button"",
                    ""id"": ""ce76f5a2-79a2-4265-bb17-edb74d2b3af4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackTarget"",
                    ""type"": ""Button"",
                    ""id"": ""b9b92491-c240-444f-bfc0-5623412ed44b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackFollow"",
                    ""type"": ""Button"",
                    ""id"": ""d372611b-cefe-441e-bc68-d394e91eae6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackMove"",
                    ""type"": ""Button"",
                    ""id"": ""a8672045-b64b-45bd-8eae-9bd54c475105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""05c1ccff-cd7d-4faa-a512-8b15127a5151"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectAllAllies"",
                    ""type"": ""Button"",
                    ""id"": ""4b27e021-511a-4edd-b6bf-413b9a116fab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeselectAllAllies"",
                    ""type"": ""Button"",
                    ""id"": ""b9c96ecb-709d-4785-bbac-da0833be904a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey1"",
                    ""type"": ""Button"",
                    ""id"": ""dd01b830-08fd-440e-9890-25196f19c38b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey2"",
                    ""type"": ""Button"",
                    ""id"": ""fc619b33-14d0-4173-bf75-87db56470fb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey3"",
                    ""type"": ""Button"",
                    ""id"": ""56536c1c-5088-4fe9-8e0a-5cb8673ed83a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey4"",
                    ""type"": ""Button"",
                    ""id"": ""8cc0ed49-83c1-400b-9781-9345647a36d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey5"",
                    ""type"": ""Button"",
                    ""id"": ""56aafb62-cbe2-4af2-bff8-77bccf89bc09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey6"",
                    ""type"": ""Button"",
                    ""id"": ""379ad8c9-d9a0-4134-9da5-6f4d157afb55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey7"",
                    ""type"": ""Button"",
                    ""id"": ""351c7e17-1647-4085-990e-8ac96805399c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey8"",
                    ""type"": ""Button"",
                    ""id"": ""45d149ff-9b0d-4dd5-91e2-16d699633301"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey9"",
                    ""type"": ""Button"",
                    ""id"": ""c3645b9b-c6b5-461e-b92a-138846e82215"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BuffSelf"",
                    ""type"": ""Button"",
                    ""id"": ""cc581983-2234-4b8b-861b-0d36a9a65d5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AbilityOne"",
                    ""type"": ""Button"",
                    ""id"": ""2ef7d3d5-bf0b-41a1-b5c5-908cc97dcdac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AbilityTwo"",
                    ""type"": ""Button"",
                    ""id"": ""06b0f6a8-7454-419f-b37a-3a566fb5792b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AbilityThree"",
                    ""type"": ""Button"",
                    ""id"": ""1881ebd8-9e70-46c8-86c9-830762b6f227"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disband"",
                    ""type"": ""Button"",
                    ""id"": ""191650f4-10a9-4667-a7f8-5431ef5c38e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Multiselect"",
                    ""type"": ""Button"",
                    ""id"": ""926b8245-fc7c-4765-b61e-08ae90602ad3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectByType"",
                    ""type"": ""Button"",
                    ""id"": ""80f23911-2507-458d-ae48-b29acfaef17c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropItem"",
                    ""type"": ""Button"",
                    ""id"": ""f5f9c0d4-d55b-437a-b264-37643e77deaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""27e4d8d5-8185-4e5d-bc69-301189c526c1"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Idle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe95e9ae-35f5-45fa-b376-ab61c75ed7d9"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AttackFollow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4fa5645-7a67-4c85-9f8f-9c038db61da2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a543f8b-dcbe-459d-b55b-b9af8d599780"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a95b9af-dd25-419b-adb1-4c30fe569de2"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c545b3e9-dd00-4e05-96f9-dfeffaa5794c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4349490-8158-4140-8d18-5c7f0f2fbf89"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1cd8365-51e6-448c-a40a-7f0ce6ebd597"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""429b077d-0f8e-462d-a22f-8360a808e776"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d501c21-a5f0-4f5b-be83-025ba8094b9d"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0085a6cb-c37b-4f56-bef9-1c22a851cec4"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Hotkey9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c56e512f-ec9a-4438-979a-2dfc438d86c5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AllyControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77c7a325-5916-4db0-8c4f-8577ba84718a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectAllAllies"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e333b16-848e-468a-b29a-a98f14b789a2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AbilityOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""684846e2-a416-489b-8304-679f91f83e03"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AbilityTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44ef1512-c16d-435c-92ee-8d5267cf3f9d"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Disband"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b67a66b4-3cc5-4dc3-88df-d5a0a9271fb6"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Multiselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""fd5d15b1-bc4b-4614-9db3-164adcc89244"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectByType"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""cc215495-a53b-4057-92ee-e7184a76850b"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectByType"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""48aff341-677d-4400-8cec-9a0163e97046"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectByType"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""96d768bb-4274-4285-a79c-3a04f31f8406"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeselectAllAllies"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68f6728c-25ab-4703-860f-3d3c12dc000f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f784615b-1134-4e65-8aaf-fa8301dfcd7c"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AttackMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuAction"",
            ""id"": ""e8bc569a-cf21-46dd-aafa-e0e1e1a37583"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""d0653edc-8237-4ba4-838f-eb9787168e53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""Value"",
                    ""id"": ""8b62a94c-dd71-4dcd-a52d-53c2becab841"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""699b3b75-22ea-49fe-874c-1ed3ca493fce"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""299a5753-6ac2-4dcf-9557-398fc46d0b44"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7fee066-427e-4b61-873f-1dd0090870c5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DialogueAction"",
            ""id"": ""ec697b40-c237-4f2d-81d8-501931e5acc0"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""42ba81c5-5b39-4a92-b433-f419dbdc0725"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""31304e80-3dcc-434b-a3c5-9a8922212712"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CheatConsole"",
            ""id"": ""e284e628-cd9f-47a9-bdea-b96821a07183"",
            ""actions"": [
                {
                    ""name"": ""ToggleDebug"",
                    ""type"": ""Button"",
                    ""id"": ""c4c62df4-8ad9-4586-a80c-120d0595973f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""33249177-546e-47ec-9046-fdf462344e79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CommandNavigation"",
                    ""type"": ""Value"",
                    ""id"": ""7a3c6880-549b-4b26-a7d3-a2a57951c9e9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""49bad671-2f3e-44d5-9dad-c415e9de4654"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""65d9dc0f-5f77-4e2a-9e3d-df99001969c2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CommandNavigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7c9bb014-2dfb-4e86-951d-4040aba6cc3b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CommandNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""01abeb37-2776-4605-ad1d-272d012f140b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CommandNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4d77f738-0615-41a1-8072-1c2f05099612"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CommandNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9056e0dd-0890-492f-bbf0-1d9eb1c6c9dd"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CommandNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerAction
        m_PlayerAction = asset.FindActionMap("PlayerAction", throwIfNotFound: true);
        m_PlayerAction_Movement = m_PlayerAction.FindAction("Movement", throwIfNotFound: true);
        m_PlayerAction_CastSpell = m_PlayerAction.FindAction("CastSpell", throwIfNotFound: true);
        m_PlayerAction_SelectSpell = m_PlayerAction.FindAction("SelectSpell", throwIfNotFound: true);
        m_PlayerAction_TransitionToLevel = m_PlayerAction.FindAction("TransitionToLevel", throwIfNotFound: true);
        m_PlayerAction_Dash = m_PlayerAction.FindAction("Dash", throwIfNotFound: true);
        // CameraAction
        m_CameraAction = asset.FindActionMap("CameraAction", throwIfNotFound: true);
        m_CameraAction_Zoom = m_CameraAction.FindAction("Zoom", throwIfNotFound: true);
        m_CameraAction_Rotate = m_CameraAction.FindAction("Rotate", throwIfNotFound: true);
        m_CameraAction_CursorPosition = m_CameraAction.FindAction("CursorPosition", throwIfNotFound: true);
        m_CameraAction_RotateMode = m_CameraAction.FindAction("RotateMode", throwIfNotFound: true);
        // AllyAction
        m_AllyAction = asset.FindActionMap("AllyAction", throwIfNotFound: true);
        m_AllyAction_Default = m_AllyAction.FindAction("Default", throwIfNotFound: true);
        m_AllyAction_Idle = m_AllyAction.FindAction("Idle", throwIfNotFound: true);
        m_AllyAction_AllyControl = m_AllyAction.FindAction("AllyControl", throwIfNotFound: true);
        m_AllyAction_MoveTo = m_AllyAction.FindAction("MoveTo", throwIfNotFound: true);
        m_AllyAction_FollowTarget = m_AllyAction.FindAction("FollowTarget", throwIfNotFound: true);
        m_AllyAction_AttackTarget = m_AllyAction.FindAction("AttackTarget", throwIfNotFound: true);
        m_AllyAction_AttackFollow = m_AllyAction.FindAction("AttackFollow", throwIfNotFound: true);
        m_AllyAction_AttackMove = m_AllyAction.FindAction("AttackMove", throwIfNotFound: true);
        m_AllyAction_Interact = m_AllyAction.FindAction("Interact", throwIfNotFound: true);
        m_AllyAction_SelectAllAllies = m_AllyAction.FindAction("SelectAllAllies", throwIfNotFound: true);
        m_AllyAction_DeselectAllAllies = m_AllyAction.FindAction("DeselectAllAllies", throwIfNotFound: true);
        m_AllyAction_Hotkey1 = m_AllyAction.FindAction("Hotkey1", throwIfNotFound: true);
        m_AllyAction_Hotkey2 = m_AllyAction.FindAction("Hotkey2", throwIfNotFound: true);
        m_AllyAction_Hotkey3 = m_AllyAction.FindAction("Hotkey3", throwIfNotFound: true);
        m_AllyAction_Hotkey4 = m_AllyAction.FindAction("Hotkey4", throwIfNotFound: true);
        m_AllyAction_Hotkey5 = m_AllyAction.FindAction("Hotkey5", throwIfNotFound: true);
        m_AllyAction_Hotkey6 = m_AllyAction.FindAction("Hotkey6", throwIfNotFound: true);
        m_AllyAction_Hotkey7 = m_AllyAction.FindAction("Hotkey7", throwIfNotFound: true);
        m_AllyAction_Hotkey8 = m_AllyAction.FindAction("Hotkey8", throwIfNotFound: true);
        m_AllyAction_Hotkey9 = m_AllyAction.FindAction("Hotkey9", throwIfNotFound: true);
        m_AllyAction_BuffSelf = m_AllyAction.FindAction("BuffSelf", throwIfNotFound: true);
        m_AllyAction_AbilityOne = m_AllyAction.FindAction("AbilityOne", throwIfNotFound: true);
        m_AllyAction_AbilityTwo = m_AllyAction.FindAction("AbilityTwo", throwIfNotFound: true);
        m_AllyAction_AbilityThree = m_AllyAction.FindAction("AbilityThree", throwIfNotFound: true);
        m_AllyAction_Disband = m_AllyAction.FindAction("Disband", throwIfNotFound: true);
        m_AllyAction_Multiselect = m_AllyAction.FindAction("Multiselect", throwIfNotFound: true);
        m_AllyAction_SelectByType = m_AllyAction.FindAction("SelectByType", throwIfNotFound: true);
        m_AllyAction_DropItem = m_AllyAction.FindAction("DropItem", throwIfNotFound: true);
        // MenuAction
        m_MenuAction = asset.FindActionMap("MenuAction", throwIfNotFound: true);
        m_MenuAction_Pause = m_MenuAction.FindAction("Pause", throwIfNotFound: true);
        m_MenuAction_CursorPosition = m_MenuAction.FindAction("CursorPosition", throwIfNotFound: true);
        // DialogueAction
        m_DialogueAction = asset.FindActionMap("DialogueAction", throwIfNotFound: true);
        m_DialogueAction_LeftClick = m_DialogueAction.FindAction("LeftClick", throwIfNotFound: true);
        // CheatConsole
        m_CheatConsole = asset.FindActionMap("CheatConsole", throwIfNotFound: true);
        m_CheatConsole_ToggleDebug = m_CheatConsole.FindAction("ToggleDebug", throwIfNotFound: true);
        m_CheatConsole_Enter = m_CheatConsole.FindAction("Enter", throwIfNotFound: true);
        m_CheatConsole_CommandNavigation = m_CheatConsole.FindAction("CommandNavigation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerAction
    private readonly InputActionMap m_PlayerAction;
    private IPlayerActionActions m_PlayerActionActionsCallbackInterface;
    private readonly InputAction m_PlayerAction_Movement;
    private readonly InputAction m_PlayerAction_CastSpell;
    private readonly InputAction m_PlayerAction_SelectSpell;
    private readonly InputAction m_PlayerAction_TransitionToLevel;
    private readonly InputAction m_PlayerAction_Dash;
    public struct PlayerActionActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerActionActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerAction_Movement;
        public InputAction @CastSpell => m_Wrapper.m_PlayerAction_CastSpell;
        public InputAction @SelectSpell => m_Wrapper.m_PlayerAction_SelectSpell;
        public InputAction @TransitionToLevel => m_Wrapper.m_PlayerAction_TransitionToLevel;
        public InputAction @Dash => m_Wrapper.m_PlayerAction_Dash;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnMovement;
                @CastSpell.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnCastSpell;
                @CastSpell.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnCastSpell;
                @CastSpell.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnCastSpell;
                @SelectSpell.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSelectSpell;
                @SelectSpell.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSelectSpell;
                @SelectSpell.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSelectSpell;
                @TransitionToLevel.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnTransitionToLevel;
                @TransitionToLevel.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnTransitionToLevel;
                @TransitionToLevel.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnTransitionToLevel;
                @Dash.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnDash;
            }
            m_Wrapper.m_PlayerActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @CastSpell.started += instance.OnCastSpell;
                @CastSpell.performed += instance.OnCastSpell;
                @CastSpell.canceled += instance.OnCastSpell;
                @SelectSpell.started += instance.OnSelectSpell;
                @SelectSpell.performed += instance.OnSelectSpell;
                @SelectSpell.canceled += instance.OnSelectSpell;
                @TransitionToLevel.started += instance.OnTransitionToLevel;
                @TransitionToLevel.performed += instance.OnTransitionToLevel;
                @TransitionToLevel.canceled += instance.OnTransitionToLevel;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
            }
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);

    // CameraAction
    private readonly InputActionMap m_CameraAction;
    private ICameraActionActions m_CameraActionActionsCallbackInterface;
    private readonly InputAction m_CameraAction_Zoom;
    private readonly InputAction m_CameraAction_Rotate;
    private readonly InputAction m_CameraAction_CursorPosition;
    private readonly InputAction m_CameraAction_RotateMode;
    public struct CameraActionActions
    {
        private @PlayerInputs m_Wrapper;
        public CameraActionActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Zoom => m_Wrapper.m_CameraAction_Zoom;
        public InputAction @Rotate => m_Wrapper.m_CameraAction_Rotate;
        public InputAction @CursorPosition => m_Wrapper.m_CameraAction_CursorPosition;
        public InputAction @RotateMode => m_Wrapper.m_CameraAction_RotateMode;
        public InputActionMap Get() { return m_Wrapper.m_CameraAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActionActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActionActions instance)
        {
            if (m_Wrapper.m_CameraActionActionsCallbackInterface != null)
            {
                @Zoom.started -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnZoom;
                @Rotate.started -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnRotate;
                @CursorPosition.started -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.performed -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.canceled -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnCursorPosition;
                @RotateMode.started -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnRotateMode;
                @RotateMode.performed -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnRotateMode;
                @RotateMode.canceled -= m_Wrapper.m_CameraActionActionsCallbackInterface.OnRotateMode;
            }
            m_Wrapper.m_CameraActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @CursorPosition.started += instance.OnCursorPosition;
                @CursorPosition.performed += instance.OnCursorPosition;
                @CursorPosition.canceled += instance.OnCursorPosition;
                @RotateMode.started += instance.OnRotateMode;
                @RotateMode.performed += instance.OnRotateMode;
                @RotateMode.canceled += instance.OnRotateMode;
            }
        }
    }
    public CameraActionActions @CameraAction => new CameraActionActions(this);

    // AllyAction
    private readonly InputActionMap m_AllyAction;
    private IAllyActionActions m_AllyActionActionsCallbackInterface;
    private readonly InputAction m_AllyAction_Default;
    private readonly InputAction m_AllyAction_Idle;
    private readonly InputAction m_AllyAction_AllyControl;
    private readonly InputAction m_AllyAction_MoveTo;
    private readonly InputAction m_AllyAction_FollowTarget;
    private readonly InputAction m_AllyAction_AttackTarget;
    private readonly InputAction m_AllyAction_AttackFollow;
    private readonly InputAction m_AllyAction_AttackMove;
    private readonly InputAction m_AllyAction_Interact;
    private readonly InputAction m_AllyAction_SelectAllAllies;
    private readonly InputAction m_AllyAction_DeselectAllAllies;
    private readonly InputAction m_AllyAction_Hotkey1;
    private readonly InputAction m_AllyAction_Hotkey2;
    private readonly InputAction m_AllyAction_Hotkey3;
    private readonly InputAction m_AllyAction_Hotkey4;
    private readonly InputAction m_AllyAction_Hotkey5;
    private readonly InputAction m_AllyAction_Hotkey6;
    private readonly InputAction m_AllyAction_Hotkey7;
    private readonly InputAction m_AllyAction_Hotkey8;
    private readonly InputAction m_AllyAction_Hotkey9;
    private readonly InputAction m_AllyAction_BuffSelf;
    private readonly InputAction m_AllyAction_AbilityOne;
    private readonly InputAction m_AllyAction_AbilityTwo;
    private readonly InputAction m_AllyAction_AbilityThree;
    private readonly InputAction m_AllyAction_Disband;
    private readonly InputAction m_AllyAction_Multiselect;
    private readonly InputAction m_AllyAction_SelectByType;
    private readonly InputAction m_AllyAction_DropItem;
    public struct AllyActionActions
    {
        private @PlayerInputs m_Wrapper;
        public AllyActionActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Default => m_Wrapper.m_AllyAction_Default;
        public InputAction @Idle => m_Wrapper.m_AllyAction_Idle;
        public InputAction @AllyControl => m_Wrapper.m_AllyAction_AllyControl;
        public InputAction @MoveTo => m_Wrapper.m_AllyAction_MoveTo;
        public InputAction @FollowTarget => m_Wrapper.m_AllyAction_FollowTarget;
        public InputAction @AttackTarget => m_Wrapper.m_AllyAction_AttackTarget;
        public InputAction @AttackFollow => m_Wrapper.m_AllyAction_AttackFollow;
        public InputAction @AttackMove => m_Wrapper.m_AllyAction_AttackMove;
        public InputAction @Interact => m_Wrapper.m_AllyAction_Interact;
        public InputAction @SelectAllAllies => m_Wrapper.m_AllyAction_SelectAllAllies;
        public InputAction @DeselectAllAllies => m_Wrapper.m_AllyAction_DeselectAllAllies;
        public InputAction @Hotkey1 => m_Wrapper.m_AllyAction_Hotkey1;
        public InputAction @Hotkey2 => m_Wrapper.m_AllyAction_Hotkey2;
        public InputAction @Hotkey3 => m_Wrapper.m_AllyAction_Hotkey3;
        public InputAction @Hotkey4 => m_Wrapper.m_AllyAction_Hotkey4;
        public InputAction @Hotkey5 => m_Wrapper.m_AllyAction_Hotkey5;
        public InputAction @Hotkey6 => m_Wrapper.m_AllyAction_Hotkey6;
        public InputAction @Hotkey7 => m_Wrapper.m_AllyAction_Hotkey7;
        public InputAction @Hotkey8 => m_Wrapper.m_AllyAction_Hotkey8;
        public InputAction @Hotkey9 => m_Wrapper.m_AllyAction_Hotkey9;
        public InputAction @BuffSelf => m_Wrapper.m_AllyAction_BuffSelf;
        public InputAction @AbilityOne => m_Wrapper.m_AllyAction_AbilityOne;
        public InputAction @AbilityTwo => m_Wrapper.m_AllyAction_AbilityTwo;
        public InputAction @AbilityThree => m_Wrapper.m_AllyAction_AbilityThree;
        public InputAction @Disband => m_Wrapper.m_AllyAction_Disband;
        public InputAction @Multiselect => m_Wrapper.m_AllyAction_Multiselect;
        public InputAction @SelectByType => m_Wrapper.m_AllyAction_SelectByType;
        public InputAction @DropItem => m_Wrapper.m_AllyAction_DropItem;
        public InputActionMap Get() { return m_Wrapper.m_AllyAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AllyActionActions set) { return set.Get(); }
        public void SetCallbacks(IAllyActionActions instance)
        {
            if (m_Wrapper.m_AllyActionActionsCallbackInterface != null)
            {
                @Default.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDefault;
                @Default.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDefault;
                @Default.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDefault;
                @Idle.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnIdle;
                @Idle.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnIdle;
                @Idle.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnIdle;
                @AllyControl.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAllyControl;
                @AllyControl.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAllyControl;
                @AllyControl.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAllyControl;
                @MoveTo.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnMoveTo;
                @MoveTo.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnMoveTo;
                @MoveTo.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnMoveTo;
                @FollowTarget.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnFollowTarget;
                @FollowTarget.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnFollowTarget;
                @FollowTarget.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnFollowTarget;
                @AttackTarget.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackTarget;
                @AttackTarget.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackTarget;
                @AttackTarget.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackTarget;
                @AttackFollow.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackFollow;
                @AttackFollow.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackFollow;
                @AttackFollow.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackFollow;
                @AttackMove.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackMove;
                @AttackMove.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackMove;
                @AttackMove.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAttackMove;
                @Interact.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnInteract;
                @SelectAllAllies.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnSelectAllAllies;
                @SelectAllAllies.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnSelectAllAllies;
                @SelectAllAllies.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnSelectAllAllies;
                @DeselectAllAllies.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDeselectAllAllies;
                @DeselectAllAllies.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDeselectAllAllies;
                @DeselectAllAllies.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDeselectAllAllies;
                @Hotkey1.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey1;
                @Hotkey1.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey1;
                @Hotkey1.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey1;
                @Hotkey2.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey2;
                @Hotkey2.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey2;
                @Hotkey2.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey2;
                @Hotkey3.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey3;
                @Hotkey3.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey3;
                @Hotkey3.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey3;
                @Hotkey4.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey4;
                @Hotkey4.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey4;
                @Hotkey4.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey4;
                @Hotkey5.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey5;
                @Hotkey5.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey5;
                @Hotkey5.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey5;
                @Hotkey6.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey6;
                @Hotkey6.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey6;
                @Hotkey6.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey6;
                @Hotkey7.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey7;
                @Hotkey7.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey7;
                @Hotkey7.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey7;
                @Hotkey8.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey8;
                @Hotkey8.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey8;
                @Hotkey8.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey8;
                @Hotkey9.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey9;
                @Hotkey9.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey9;
                @Hotkey9.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnHotkey9;
                @BuffSelf.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnBuffSelf;
                @BuffSelf.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnBuffSelf;
                @BuffSelf.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnBuffSelf;
                @AbilityOne.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityOne;
                @AbilityOne.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityOne;
                @AbilityOne.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityOne;
                @AbilityTwo.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityTwo;
                @AbilityTwo.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityTwo;
                @AbilityTwo.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityTwo;
                @AbilityThree.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityThree;
                @AbilityThree.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityThree;
                @AbilityThree.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnAbilityThree;
                @Disband.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDisband;
                @Disband.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDisband;
                @Disband.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDisband;
                @Multiselect.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnMultiselect;
                @Multiselect.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnMultiselect;
                @Multiselect.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnMultiselect;
                @SelectByType.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnSelectByType;
                @SelectByType.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnSelectByType;
                @SelectByType.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnSelectByType;
                @DropItem.started -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDropItem;
                @DropItem.performed -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDropItem;
                @DropItem.canceled -= m_Wrapper.m_AllyActionActionsCallbackInterface.OnDropItem;
            }
            m_Wrapper.m_AllyActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Default.started += instance.OnDefault;
                @Default.performed += instance.OnDefault;
                @Default.canceled += instance.OnDefault;
                @Idle.started += instance.OnIdle;
                @Idle.performed += instance.OnIdle;
                @Idle.canceled += instance.OnIdle;
                @AllyControl.started += instance.OnAllyControl;
                @AllyControl.performed += instance.OnAllyControl;
                @AllyControl.canceled += instance.OnAllyControl;
                @MoveTo.started += instance.OnMoveTo;
                @MoveTo.performed += instance.OnMoveTo;
                @MoveTo.canceled += instance.OnMoveTo;
                @FollowTarget.started += instance.OnFollowTarget;
                @FollowTarget.performed += instance.OnFollowTarget;
                @FollowTarget.canceled += instance.OnFollowTarget;
                @AttackTarget.started += instance.OnAttackTarget;
                @AttackTarget.performed += instance.OnAttackTarget;
                @AttackTarget.canceled += instance.OnAttackTarget;
                @AttackFollow.started += instance.OnAttackFollow;
                @AttackFollow.performed += instance.OnAttackFollow;
                @AttackFollow.canceled += instance.OnAttackFollow;
                @AttackMove.started += instance.OnAttackMove;
                @AttackMove.performed += instance.OnAttackMove;
                @AttackMove.canceled += instance.OnAttackMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @SelectAllAllies.started += instance.OnSelectAllAllies;
                @SelectAllAllies.performed += instance.OnSelectAllAllies;
                @SelectAllAllies.canceled += instance.OnSelectAllAllies;
                @DeselectAllAllies.started += instance.OnDeselectAllAllies;
                @DeselectAllAllies.performed += instance.OnDeselectAllAllies;
                @DeselectAllAllies.canceled += instance.OnDeselectAllAllies;
                @Hotkey1.started += instance.OnHotkey1;
                @Hotkey1.performed += instance.OnHotkey1;
                @Hotkey1.canceled += instance.OnHotkey1;
                @Hotkey2.started += instance.OnHotkey2;
                @Hotkey2.performed += instance.OnHotkey2;
                @Hotkey2.canceled += instance.OnHotkey2;
                @Hotkey3.started += instance.OnHotkey3;
                @Hotkey3.performed += instance.OnHotkey3;
                @Hotkey3.canceled += instance.OnHotkey3;
                @Hotkey4.started += instance.OnHotkey4;
                @Hotkey4.performed += instance.OnHotkey4;
                @Hotkey4.canceled += instance.OnHotkey4;
                @Hotkey5.started += instance.OnHotkey5;
                @Hotkey5.performed += instance.OnHotkey5;
                @Hotkey5.canceled += instance.OnHotkey5;
                @Hotkey6.started += instance.OnHotkey6;
                @Hotkey6.performed += instance.OnHotkey6;
                @Hotkey6.canceled += instance.OnHotkey6;
                @Hotkey7.started += instance.OnHotkey7;
                @Hotkey7.performed += instance.OnHotkey7;
                @Hotkey7.canceled += instance.OnHotkey7;
                @Hotkey8.started += instance.OnHotkey8;
                @Hotkey8.performed += instance.OnHotkey8;
                @Hotkey8.canceled += instance.OnHotkey8;
                @Hotkey9.started += instance.OnHotkey9;
                @Hotkey9.performed += instance.OnHotkey9;
                @Hotkey9.canceled += instance.OnHotkey9;
                @BuffSelf.started += instance.OnBuffSelf;
                @BuffSelf.performed += instance.OnBuffSelf;
                @BuffSelf.canceled += instance.OnBuffSelf;
                @AbilityOne.started += instance.OnAbilityOne;
                @AbilityOne.performed += instance.OnAbilityOne;
                @AbilityOne.canceled += instance.OnAbilityOne;
                @AbilityTwo.started += instance.OnAbilityTwo;
                @AbilityTwo.performed += instance.OnAbilityTwo;
                @AbilityTwo.canceled += instance.OnAbilityTwo;
                @AbilityThree.started += instance.OnAbilityThree;
                @AbilityThree.performed += instance.OnAbilityThree;
                @AbilityThree.canceled += instance.OnAbilityThree;
                @Disband.started += instance.OnDisband;
                @Disband.performed += instance.OnDisband;
                @Disband.canceled += instance.OnDisband;
                @Multiselect.started += instance.OnMultiselect;
                @Multiselect.performed += instance.OnMultiselect;
                @Multiselect.canceled += instance.OnMultiselect;
                @SelectByType.started += instance.OnSelectByType;
                @SelectByType.performed += instance.OnSelectByType;
                @SelectByType.canceled += instance.OnSelectByType;
                @DropItem.started += instance.OnDropItem;
                @DropItem.performed += instance.OnDropItem;
                @DropItem.canceled += instance.OnDropItem;
            }
        }
    }
    public AllyActionActions @AllyAction => new AllyActionActions(this);

    // MenuAction
    private readonly InputActionMap m_MenuAction;
    private IMenuActionActions m_MenuActionActionsCallbackInterface;
    private readonly InputAction m_MenuAction_Pause;
    private readonly InputAction m_MenuAction_CursorPosition;
    public struct MenuActionActions
    {
        private @PlayerInputs m_Wrapper;
        public MenuActionActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_MenuAction_Pause;
        public InputAction @CursorPosition => m_Wrapper.m_MenuAction_CursorPosition;
        public InputActionMap Get() { return m_Wrapper.m_MenuAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActionActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActionActions instance)
        {
            if (m_Wrapper.m_MenuActionActionsCallbackInterface != null)
            {
                @Pause.started -= m_Wrapper.m_MenuActionActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MenuActionActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MenuActionActionsCallbackInterface.OnPause;
                @CursorPosition.started -= m_Wrapper.m_MenuActionActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.performed -= m_Wrapper.m_MenuActionActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.canceled -= m_Wrapper.m_MenuActionActionsCallbackInterface.OnCursorPosition;
            }
            m_Wrapper.m_MenuActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @CursorPosition.started += instance.OnCursorPosition;
                @CursorPosition.performed += instance.OnCursorPosition;
                @CursorPosition.canceled += instance.OnCursorPosition;
            }
        }
    }
    public MenuActionActions @MenuAction => new MenuActionActions(this);

    // DialogueAction
    private readonly InputActionMap m_DialogueAction;
    private IDialogueActionActions m_DialogueActionActionsCallbackInterface;
    private readonly InputAction m_DialogueAction_LeftClick;
    public struct DialogueActionActions
    {
        private @PlayerInputs m_Wrapper;
        public DialogueActionActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_DialogueAction_LeftClick;
        public InputActionMap Get() { return m_Wrapper.m_DialogueAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActionActions set) { return set.Get(); }
        public void SetCallbacks(IDialogueActionActions instance)
        {
            if (m_Wrapper.m_DialogueActionActionsCallbackInterface != null)
            {
                @LeftClick.started -= m_Wrapper.m_DialogueActionActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_DialogueActionActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_DialogueActionActionsCallbackInterface.OnLeftClick;
            }
            m_Wrapper.m_DialogueActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
            }
        }
    }
    public DialogueActionActions @DialogueAction => new DialogueActionActions(this);

    // CheatConsole
    private readonly InputActionMap m_CheatConsole;
    private ICheatConsoleActions m_CheatConsoleActionsCallbackInterface;
    private readonly InputAction m_CheatConsole_ToggleDebug;
    private readonly InputAction m_CheatConsole_Enter;
    private readonly InputAction m_CheatConsole_CommandNavigation;
    public struct CheatConsoleActions
    {
        private @PlayerInputs m_Wrapper;
        public CheatConsoleActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleDebug => m_Wrapper.m_CheatConsole_ToggleDebug;
        public InputAction @Enter => m_Wrapper.m_CheatConsole_Enter;
        public InputAction @CommandNavigation => m_Wrapper.m_CheatConsole_CommandNavigation;
        public InputActionMap Get() { return m_Wrapper.m_CheatConsole; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CheatConsoleActions set) { return set.Get(); }
        public void SetCallbacks(ICheatConsoleActions instance)
        {
            if (m_Wrapper.m_CheatConsoleActionsCallbackInterface != null)
            {
                @ToggleDebug.started -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnToggleDebug;
                @ToggleDebug.performed -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnToggleDebug;
                @ToggleDebug.canceled -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnToggleDebug;
                @Enter.started -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnEnter;
                @CommandNavigation.started -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnCommandNavigation;
                @CommandNavigation.performed -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnCommandNavigation;
                @CommandNavigation.canceled -= m_Wrapper.m_CheatConsoleActionsCallbackInterface.OnCommandNavigation;
            }
            m_Wrapper.m_CheatConsoleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleDebug.started += instance.OnToggleDebug;
                @ToggleDebug.performed += instance.OnToggleDebug;
                @ToggleDebug.canceled += instance.OnToggleDebug;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @CommandNavigation.started += instance.OnCommandNavigation;
                @CommandNavigation.performed += instance.OnCommandNavigation;
                @CommandNavigation.canceled += instance.OnCommandNavigation;
            }
        }
    }
    public CheatConsoleActions @CheatConsole => new CheatConsoleActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerActionActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCastSpell(InputAction.CallbackContext context);
        void OnSelectSpell(InputAction.CallbackContext context);
        void OnTransitionToLevel(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
    public interface ICameraActionActions
    {
        void OnZoom(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnCursorPosition(InputAction.CallbackContext context);
        void OnRotateMode(InputAction.CallbackContext context);
    }
    public interface IAllyActionActions
    {
        void OnDefault(InputAction.CallbackContext context);
        void OnIdle(InputAction.CallbackContext context);
        void OnAllyControl(InputAction.CallbackContext context);
        void OnMoveTo(InputAction.CallbackContext context);
        void OnFollowTarget(InputAction.CallbackContext context);
        void OnAttackTarget(InputAction.CallbackContext context);
        void OnAttackFollow(InputAction.CallbackContext context);
        void OnAttackMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnSelectAllAllies(InputAction.CallbackContext context);
        void OnDeselectAllAllies(InputAction.CallbackContext context);
        void OnHotkey1(InputAction.CallbackContext context);
        void OnHotkey2(InputAction.CallbackContext context);
        void OnHotkey3(InputAction.CallbackContext context);
        void OnHotkey4(InputAction.CallbackContext context);
        void OnHotkey5(InputAction.CallbackContext context);
        void OnHotkey6(InputAction.CallbackContext context);
        void OnHotkey7(InputAction.CallbackContext context);
        void OnHotkey8(InputAction.CallbackContext context);
        void OnHotkey9(InputAction.CallbackContext context);
        void OnBuffSelf(InputAction.CallbackContext context);
        void OnAbilityOne(InputAction.CallbackContext context);
        void OnAbilityTwo(InputAction.CallbackContext context);
        void OnAbilityThree(InputAction.CallbackContext context);
        void OnDisband(InputAction.CallbackContext context);
        void OnMultiselect(InputAction.CallbackContext context);
        void OnSelectByType(InputAction.CallbackContext context);
        void OnDropItem(InputAction.CallbackContext context);
    }
    public interface IMenuActionActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnCursorPosition(InputAction.CallbackContext context);
    }
    public interface IDialogueActionActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
    }
    public interface ICheatConsoleActions
    {
        void OnToggleDebug(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnCommandNavigation(InputAction.CallbackContext context);
    }
}
